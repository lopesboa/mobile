anchors:
  - &install-nvm
    name: Install NVM
    command: |
      curl -o- "https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh" | bash
      echo 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --install' >> $BASH_ENV
  - &install-yarn
    name: Install Yarn
    command: npm install -g yarn
  - &set-ruby-version
    name: Set ruby version
    command: echo "ruby-$RUBY_VERSION" > ~/.ruby-version
  - &macos-image
    xcode: 11.4.1
  - &install-watchman
    name: Install watchman
    # https://github.com/oondeo/watchman/pull/71/commits/e9ab4acba23109add581494055248b519523f174
    command: |
      brew unlink python@2
      brew install watchman

version: 2
jobs:
  dependencies:
    working_directory: ~/app
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          key: yarn-v4-{{ checksum ".nvmrc" }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v4-{{ checksum ".nvmrc" }}-{{ checksum "package.json" }}-{{ arch }}
      - run:
          name: Node dependencies
          command: |
            npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
            npm config set @coorpacademy:registry http://registry.npmjs.org/
            yarn config set registry https://registry.npmjs.org/
            yarn install --frozen-lockfile
      - save_cache:
          key: yarn-v4-{{ checksum ".nvmrc" }}-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v4-{{ checksum ".nvmrc" }}-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/app
          paths:
            - node_modules
            - src/modules/version.json
            - android/app/google-services.json
            - ios/GoogleService-Info.plist

  # TODO: Add TS lint & check
  linting:
    working_directory: ~/app
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Lint
          command: echo
      # - run:
      #     name: Lint
      #     command: yarn lint
      # - run:
      #     name: Flow
      #     command: yarn lint:flow

  unit_tests:
    working_directory: ~/app
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Unit tests
          command: yarn test:unit -i --forceExit
          environment:
            TZ: Europe/Paris
            JEST_JUNIT_OUTPUT: ./coverage/results/jest/results.xml
      - store_test_results:
          path: ./coverage/results

  end2end_tests_ios_build:
    macos: *macos-image
    working_directory: ~/app

    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - restore_cache:
          key: detox-v4-{{ checksum ".nvmrc" }}-{{ checksum ".xcoderc" }}-{{ arch }}

      - run:
          name: Detox framework
          command: |
            yarn global add detox-cli
            detox clean-framework-cache && detox build-framework-cache

      - save_cache:
          key: detox-v4-{{ checksum ".nvmrc" }}-{{ checksum ".xcoderc" }}-{{ arch }}
          paths:
            - ~/Library/Detox/ios
            - ~/.config/yarn/global

      - run: *install-watchman

      - run:
          name: Build
          command: yarn test:end2end:ios:release:build

      - persist_to_workspace:
          root: ~/app
          paths:
            - ios/build/Build/Products/Release-iphonesimulator/Coorpacademy.app

  end2end_tests_ios_run:
    macos: *macos-image
    working_directory: ~/app
    parallelism: 8

    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - restore_cache:
          key: detox-v4-{{ checksum ".nvmrc" }}-{{ checksum ".xcoderc" }}-{{ arch }}

      - restore_cache:
          key: brew-e2e-v4-{{ checksum ".nvmrc" }}-ios-{{ arch }}

      - run:
          name: Brew dependencies
          command: |
            if brew ls --versions applesimutils > /dev/null; then
              echo "Applesimutils already installed."
              brew link applesimutils
            else
              echo "Applesimutils not installed."
              brew tap wix/brew
              brew install applesimutils
            fi

      - save_cache:
          key: brew-e2e-v4-{{ checksum ".nvmrc" }}-ios-{{ arch }}
          paths:
            - ~/Library/Caches/Homebrew
            - /usr/local/Cellar

      - run:
          name: Tests
          command: |
            yarn global add detox-cli
            detox clean-framework-cache && detox build-framework-cache
            circleci tests glob "__e2e__/*.test.ts" | circleci tests split --split-by=timings | xargs -n 1 yarn test:end2end:ios:release:test --cleanup -f --workers=8
          no_output_timeout: 50m
          environment:
            JEST_JUNIT_OUTPUT: ./__e2e__/results/jest/results.xml

      - store_test_results:
          path: ./__e2e__/results

  prepare_ios:
    macos: *macos-image
    working_directory: ~/app

    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - run: *set-ruby-version

      - restore_cache:
          key: gems-v4-{{ checksum ".nvmrc" }}-ios-{{ arch }}

      - run:
          name: Gems dependencies
          command: cd ios && bundle install

      - save_cache:
          key: gems-v4-{{ checksum ".nvmrc" }}-ios-{{ arch }}
          paths:
            - ios/gems

      - restore_cache:
          key: pods-v4-{{ checksum ".nvmrc" }}-{{ checksum ".xcoderc" }}-{{ checksum "ios/Podfile.lock" }}-{{ arch }}

      - run:
          name: Pods dependencies
          command: yarn cocoapods:install

      - save_cache:
          key: pods-v4-{{ checksum ".nvmrc" }}-{{ checksum ".xcoderc" }}-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods

      - persist_to_workspace:
          root: ~/app
          paths:
            - ios/gems
            - ios/Pods

  build_ios:
    macos: *macos-image
    working_directory: ~/app

    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - run: *set-ruby-version
      - run: *install-watchman

      - run:
          name: Build
          command: cd ios && bundle exec fastlane adhoc
          environment:
            RCT_NO_LAUNCH_PACKAGER: 1

      - store_artifacts:
          path: ios/release
          destination: artifacts

      - persist_to_workspace:
          root: ~/app
          paths:
            - ios/release

  prepare_android:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - attach_workspace:
          at: ~/app

      - run: *install-nvm

      - restore_cache:
          key: gems-v4-{{ checksum ".nvmrc" }}-android-{{ arch }}

      - run:
          name: Gems dependencies
          command: cd android && bundle install

      - save_cache:
          key: gems-v4-{{ checksum ".nvmrc" }}-android-{{ arch }}
          paths:
            - android/gems

      - restore_cache:
          key: gradle-v4-{{ checksum ".nvmrc" }}-{{ checksum "android/app/gradle/dependency-locks/releaseCompileClasspath.lockfile" }}-{{ checksum "android/app/gradle/dependency-locks/debugAndroidTestCompileClasspath.lockfile" }}-{{ arch }}

      - run:
          name: SDK licenses
          # Keep "|| true" because yes command handles a 141 exit code
          command: yes | sdkmanager "build-tools;28.0.3" "platforms;android-28" || true

      - run:
          name: Gradle dependencies
          command: cd android && ./gradlew androidDependencies
          environment:
            ANDROID_HOME: /opt/android/sdk

      - save_cache:
          key: gradle-v4-{{ checksum ".nvmrc" }}-{{ checksum "android/app/gradle/dependency-locks/releaseCompileClasspath.lockfile" }}-{{ checksum "android/app/gradle/dependency-locks/debugAndroidTestCompileClasspath.lockfile" }}-{{ arch }}
          paths:
            - ~/.gradle/caches

      - run:
          name: Pull certificate and service account
          command: |
            npm run pull:certificate:android
            echo "${ANDROID_SERVICE_ACCOUNT}" > android/service-account.json

      - persist_to_workspace:
          root: ~/app
          paths:
            - android/**/*.jks
            - android/**/*.keystore
            - android/service-account.json
            - android/gems
            - android/.gradle

  build_android:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - attach_workspace:
          at: ~/app

      - run: *install-nvm
      - run: *install-yarn

      - run:
          name: Build
          command: cd android && bundle exec fastlane adhoc
          environment:
            RCT_NO_LAUNCH_PACKAGER: 1
            GRADLE_OPTS: '-Xmx1024m -Dorg.gradle.daemon=false'
            _JAVA_OPTIONS: '-Xmx1024m'

      - store_artifacts:
          path: android/app/build/outputs/apk/release
          destination: artifacts

      - persist_to_workspace:
          root: ~/app
          paths:
            - android/app/build/outputs/apk/release

  deploy_android:
    working_directory: ~/app
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - add_ssh_keys:
          fingerprints:
            - 'e0:3d:95:dd:ab:22:62:0c:6d:67:10:af:80:ca:ed:64'
      - run:
          name: Known hosts
          command: ssh-keyscan -H ${AWS_DOMAIN} >> ~/.ssh/known_hosts
      - run:
          name: Prepare
          command: |
            mkdir dist && cd dist
            echo "{\"date\": \"$(TZ=Europe/Paris date '+%d/%m/%Y %H:%M:%S')\", \"commit\": \"$(git log -n 1 --pretty=format:'%h')\"}" > build-android.json
            cp ../android/app/build/outputs/apk/release/Coorpacademy-release.apk Coorpacademy.apk
      - run:
          name: Deploy to internal store
          command: |
            [ -z "${CIRCLE_PULL_REQUEST}" ] && BRANCH_NAME="${CIRCLE_BRANCH}" || BRANCH_NAME="PR-${CIRCLE_PULL_REQUEST##*/}"
            echo "Deploying on ${BRANCH_NAME}"
            ssh ${AWS_USER}@${AWS_DOMAIN} "mkdir -p /var/www/html/${BRANCH_NAME} -v"
            scp dist/* ${AWS_USER}@${AWS_DOMAIN}:/var/www/html/${BRANCH_NAME}/

  deploy_ios:
    working_directory: ~/app
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - add_ssh_keys:
          fingerprints:
            - 'e0:3d:95:dd:ab:22:62:0c:6d:67:10:af:80:ca:ed:64'
      - run:
          name: Known hosts
          command: ssh-keyscan -H ${AWS_DOMAIN} >> ~/.ssh/known_hosts
      - run:
          name: Prepare
          command: |
            [ -z "${CIRCLE_PULL_REQUEST}" ] && BRANCH_NAME="${CIRCLE_BRANCH}" || BRANCH_NAME="PR-${CIRCLE_PULL_REQUEST##*/}"
            mkdir dist && cd dist
            echo "{\"date\": \"$(TZ=Europe/Paris date '+%d/%m/%Y %H:%M:%S')\", \"commit\": \"$(git log -n 1 --pretty=format:'%h')\"}" > build-ios.json
            cp ../ios/release/Coorpacademy.ipa Coorpacademy.ipa
            cp ../.circleci/adhoc-template.plist Coorpacademy.plist
            sed -i -e "s@{DOMAIN}@${DOMAIN}@g" Coorpacademy.plist
            sed -i -e "s@{PATH}@${BRANCH_NAME}@g" Coorpacademy.plist
      - run:
          name: Deploy to internal store
          command: |
            [ -z "${CIRCLE_PULL_REQUEST}" ] && BRANCH_NAME="${CIRCLE_BRANCH}" || BRANCH_NAME="PR-${CIRCLE_PULL_REQUEST##*/}"
            echo "Deploying on ${BRANCH_NAME}"
            ssh ${AWS_USER}@${AWS_DOMAIN} "mkdir -p /var/www/html/${BRANCH_NAME} -v"
            scp dist/* ${AWS_USER}@${AWS_DOMAIN}:/var/www/html/${BRANCH_NAME}/

  publish_android:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - run: *install-nvm
      - run: *install-yarn

      - run:
          name: Build and publish
          command: cd android && bundle exec fastlane beta
          environment:
            RCT_NO_LAUNCH_PACKAGER: 1
            GRADLE_OPTS: '-Xmx1024m -Dorg.gradle.daemon=false'
            _JAVA_OPTIONS: '-Xmx1024m'

  publish_ios:
    macos: *macos-image
    working_directory: ~/app
    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - run: *set-ruby-version
      - run: *install-watchman

      - run:
          name: Build and publish
          command: cd ios && bundle exec fastlane beta
          environment:
            RCT_NO_LAUNCH_PACKAGER: 1

  auto_bump_version:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-28-node
    steps:
      - checkout

      - attach_workspace:
          at: ~/app

      - run:
          name: Configure git
          command: |
            git config --global user.email "mobile@coorpacademy.com"
            git config --global user.name "Coorpacademy Tech Team"

      - run:
          name: Clean the repository
          command: git reset --hard

      - run:
          name: Increment version
          command: npm run version:auto-bump

      - run:
          name: Push version to repository
          command: |
            git remote set-url origin https://${PUSH_GITHUB_TOKEN}@github.com/Coorpacademy/mobile.git
            git push -q origin ${CIRCLE_BRANCH} && git push -q --tags

workflows:
  version: 2
  tests-build-deploy:
    jobs:
      - dependencies
      - linting:
          requires:
            - dependencies
      - unit_tests:
          requires:
            - dependencies
      - end2end_tests_ios_build:
          requires:
            - prepare_ios
            - linting # to prevent quota exceed
            - unit_tests # to prevent quota exceed
      - end2end_tests_ios_run:
          requires:
            - end2end_tests_ios_build
      - prepare_android:
          requires:
            - dependencies
      - build_android:
          requires:
            - prepare_android
      - deploy_android:
          requires:
            - build_android
      - prepare_ios:
          requires:
            - dependencies
      - build_ios:
          requires:
            - prepare_ios
      - deploy_ios:
          requires:
            - build_ios
      - publish_android:
          requires:
            - prepare_android
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - publish_ios:
          requires:
            - prepare_ios
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
  auto-increment-app-version:
    jobs:
      - dependencies:
          filters:
            branches:
              only: master
      - auto_bump_version:
          requires:
            - dependencies
          filters:
            branches:
              only: master
  publish-to-store:
    jobs:
      - dependencies:
          filters:
            branches:
              only: master
            tags:
              only: /v.*/
      - prepare_android:
          requires:
            - dependencies
      - publish_android:
          requires:
            - prepare_android
      - prepare_ios:
          requires:
            - dependencies
      - publish_ios:
          requires:
            - prepare_ios
