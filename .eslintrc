{
  "env": {
    "jest": true,
    "node": true,
    "es6": true
  },
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "parserOptions": {
    "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    }
  },
  "extends": [
    "prettier",
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "plugin:@coorpacademy/coorpacademy/core",
    "plugin:@coorpacademy/coorpacademy/react",
    "plugin:@coorpacademy/coorpacademy/prettier"
  ],
  "plugins": ["prettier", "@coorpacademy/coorpacademy", "react-hooks"],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/resolver": {
      "babel-module": {
        "extensions": [".ios.js", ".js", ".ts", ".tsx", ".json"]
      }
    }
  },
  "rules": {
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "react/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "react/prop-types": "off",
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/sort-comp": [
      "error",
      {
        "order": [
          "props",
          "state",
          "type-annotations",
          "instance-variables",
          "static-methods",
          "lifecycle",
          "everything-else",
          "render"
        ]
      }
    ],
    "import/no-namespace": "off",
    "import/max-dependencies": [
      "error",
      {
        "max": 20
      }
    ],
    "react/no-access-state-in-setstate": "off",
    "react/no-deprecated": "off",
    "fp/no-class": "off",
    "promise/no-native": "off",
    "class-methods-use-this": "off",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "react/jsx-max-depth": "off",
    "react/destructuring-assignment": "off",
    "react/jsx-curly-newline": "off",
    "react/state-in-constructor": "off",
    "react/jsx-one-expression-per-line": "off",
    "default-param-last": "off",
    "unicorn/consistent-function-scoping": "off",
    "unicorn/no-unused-properties": "off"
  }
}
