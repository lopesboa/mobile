// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Modal Custom header and icon background color 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "borderRadius": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "height": 64,
          "justifyContent": "center",
          "paddingHorizontal": 32,
        },
        Object {
          "backgroundColor": "rgba(0, 128, 0, 0.2)",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingLeft": 24,
          },
          false,
          false,
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="close-modal"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4283723386}
          focusable={false}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4283723386}
          vbHeight={24}
          vbWidth={24}
          width={16}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M0 0h24v24H0z"
              fill={null}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
              fill={4283723386}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#FFFFFF",
        "borderRadius": 1000,
        "marginTop": -48,
        "padding": 5,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderRadius": 1000,
            "justifyContent": "center",
            "padding": 16,
          },
          Object {
            "backgroundColor": "rgba(0, 128, 0, 0.2)",
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={60}
        bbWidth={60}
        color={4294901760}
        focusable={false}
        height={60}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 60,
              "width": 60,
            },
          ]
        }
        tintColor={4294901760}
        vbHeight={24}
        vbWidth={24}
        width={60}
      >
        <RNSVGGroup>
          <RNSVGPath
            d="M0 0h24v24H0z"
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          />
          <RNSVGGroup
            fill={4294901760}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGPath
              d="M20.308 3.692c-.231-.23-.655-.506-1.363-.506-.718 0-1.659.309-2.733.859a8.992 8.992 0 011.464.97c.3-.122 1.343-.492 1.571-.262 1.22 1.213-4.434 7.555-5.654 8.777-1.62 1.62-6.279 5.784-8.539 5.784-.663 0-.294-1.031-.045-1.647a8.957 8.957 0 01-.967-1.462c-1.76 3.416-.426 4.608 1.012 4.608 1.161 0 2.898-.792 4.854-2.145A6.858 6.858 0 0012 19a7 7 0 007-7c0-.729-.121-1.427-.329-2.087 1.147-1.652 3.06-4.798 1.637-6.221z"
            />
            <RNSVGPath
              d="M12.532 12.47c1.81-1.811 3.383-3.739 4.425-5.411a7 7 0 10-9.913 9.884c1.691-1.044 3.651-2.637 5.488-4.473z"
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "paddingBottom": 32,
          "paddingHorizontal": 32,
        },
        Object {
          "paddingTop": 32,
        },
        Object {
          "paddingTop": 16,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      Modal with header and icon
    </Text>
  </View>
</View>
`;

exports[`Storyshots Modal Default 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "borderRadius": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "height": 64,
          "justifyContent": "center",
          "paddingHorizontal": 32,
        },
        Object {
          "backgroundColor": undefined,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingLeft": 24,
          },
          false,
          false,
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 16,
            "left": 16,
            "right": 16,
            "top": 16,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="close-modal"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          color={4283723386}
          focusable={false}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor={4283723386}
          vbHeight={24}
          vbWidth={24}
          width={16}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M0 0h24v24H0z"
              fill={null}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M21.456 5.414l-2.829-2.828-6.585 6.586-6.586-6.586-2.829 2.828L9.213 12l-6.586 6.586 2.829 2.828 6.586-6.586 6.585 6.586 2.829-2.828L14.87 12z"
              fill={4283723386}
              propList={
                Array [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "paddingBottom": 32,
          "paddingHorizontal": 32,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {},
          undefined,
        ]
      }
    >
      Some content
    </Text>
  </View>
</View>
`;
